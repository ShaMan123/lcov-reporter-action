name: Create Release
on:
  push:
    tags:
      # Push events to matching v*, i.e. v1.0, v20.15.10
      - "v*"

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install dependencies
        uses: ./.github/setup
        with:
          node-version: 18.x
      - name: Build
        id: build
        run: |
          tag=$(echo ${{ github.ref }} | sed "s/refs\/tags\/v//")
          echo "tag=v$tag" >> $GITHUB_OUTPUT
          echo "target_commitish=$tag" >> $GITHUB_OUTPUT
          git checkout -b $tag
          npm run build
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          echo "node_modules/" > .gitignore
          git add dist/main.js -f
          rm -r src
          git commit -a -m "build"
          git push --set-upstream origin $tag
        shell: bash
      - name: Create Release
        id: release
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const { data: { html_url: url } } = await github.rest.repos.createRelease({
              ...context.repo,
              tag_name: "${{ steps.build.outputs.tag }}",
              target_commitish: "${{ steps.build.outputs.target_commitish }}",
              generate_release_notes: true,
              draft: false,
              prerelease: false,
              make_latest: 'true'
            });
            return url;
      - name: Release url ${{ steps.release.outputs.result }}
        run: echo ${{ steps.release.outputs.result }}
      - name: Delete branch ${{ steps.build.outputs.target_commitish }}
        run: |
          git push origin --delete ${{ steps.build.outputs.target_commitish }}
